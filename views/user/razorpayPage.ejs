<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Razorpay Test</title>
  <style>
     body {
        font-family: 'Arial', sans-serif;
        margin: 0;
        padding: 0;
        background-image: url('https://img.freepik.com/premium-photo/full-size-photo-young-attractive-woman-happy-positive-smile-wear-casual-outfit-isolated-pink-color-background_525549-6199.jpg?w=740');
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center top; /* Adjusted background position */
    }
    body {
      font-family: 'Arial', sans-serif;
      background-color: #f5f5f5;
      margin: 0;
      padding: 20px;
      text-align: center;
    }

    h2 {
      color: #3498db;
    }

    .payment-container {
      background-color: #fff;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      padding: 20px;
      max-width: 600px;
      height: 500px;
      margin: 0 auto;
    }

    p {
      font-size: 18px;
      color: #555;
    }

    form {
      margin-top: 20px;
    }

    .razorpay-btn {
      background-color: #3498db;
      color: #fff;
      padding: 15px 30px;
      font-size: 18px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .razorpay-btn:hover {
      background-color: #2980b9;
    }

    @media (max-width: 600px) {
      .payment-container {
        max-width: 100%;
      }
      .razorpay-btn {
        padding: 12px 24px;
        font-size: 16px;
        left:60px;
      }
    }
  </style>
</head>
<body>
  <div class="payment-container" >
    <h2>Razorpay Payment Page</h2>
    <div>
      <h3>Customer Information</h3>
      <p>Name: <%= orderDetails.userName %></p>
    </div>
    <div>
      <h3>Payment Details</h3>
      <p>Payment Method: <%= orderDetails.payment %></p>
      <p>Discount Amount: Rs <%= orderDetails.discountAmount %> </p>
      <% if (orderDetails.totalAmount < 2000) { %>
        <p><b>Total Amount: Rs <%= (orderDetails.totalAmount).toFixed(2) %></b></p>
      <% } else { %>
        <p><b>Total Amount: Rs <%= orderDetails.totalAmount %> </b></p>
      <% } %>
    </div>
    <button type="button" id="rzr-pay" data-order="<%= JSON.stringify(order) %>">Pay Now</button>
  </div>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const Rzrbutton = document.querySelector('#rzr-pay');
      Rzrbutton.addEventListener('click', function() {
        let order = JSON.parse(Rzrbutton.getAttribute('data-order'));
        let amount = order.amount;
        let orderId = order.id;

        var options = {
          "key": "rzp_test_GHw0Dz9b5FhF3E",
          "amount": amount * 100,
          "currency": "INR",
          "name": "Kenz",
          "description": "Test Transaction",
          "image": "https://example.com/your_logo",
          "order_id": orderId,
          "handler": async function(response) {
            console.log("Payment handler function executed successfully.",response);
            successMessage('Payment Successful');
            try {
              const res = await fetch('/capture-payment', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  razorpay_payment_id: response.razorpay_payment_id,
                  order_id: orderId
                })
              });
              if (res.ok) {
    const data = await res.json();
    if (data.success) {
      window.location.href = '/ordersucess';
    } else {
      throw new Error(data.message);
    }}
            } catch (error) {
              console.error('Error:', error);
              failureMessage('Payment capture failed');
            }
            // Perform actions after successful payment
          },
          "prefill": {
            "name": "THASNEEMA",
            "email": "thasnikabeer2016@gmail.com",
            "contact": "0000000000"
          },
          "notes": {
            "address": "Razorpay Corporate Office"
          },
          "theme": {
            "color": "#3399cc"
          }
        };

        var rzp1 = new Razorpay(options);

        rzp1.on('payment.failed', async function(response) {
          failureMessage('Payment Failed');
          const confi = await confirmIt("Payment Failed, Save it as Pending in Order's page, or continue with other payment methods", "Save as Pending");
          if(confi.isConfirmed) {
            console.log("failurecheckinnnn")

        // Call the backend to save the order as pending
    try {
      const res = await fetch('/handle-payment-failure', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          order_id: orderId
        })
      });
      if (res.ok) {
        const data = await res.json();
        console.log('Order saved as pending:', data);
        window.location.href = '/order-history'; // Redirect to order pending page if necessary
      } else {
        const errorData = await res.json();
        throw new Error(errorData.message);
      }
    } catch (error) {
      console.error('Error:', error);
      failureMessage('Failed to save order as pending');
    }
  } else {
    console.log("User canceled saving as pending");
  }
});

        rzp1.on('payment.error', function (response) {

          console.log('Payment error:', response.error);
          failureMessage('Payment Error');
        });

        rzp1.open();
      });
    });

    function confirmIt(message, btnText) {
      return Swal.fire({
        text: message,
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: btnText || "OK",
        position: "top",
        customClass: {
          actions: 'custom-actions-class'
        }
      });
    }

    function successMessage(message) {
      Swal.fire({
        text: message,
        position: 'top',
        timer: 2000,
        background: 'green',
        color: 'white',
        showConfirmButton: false
      });
    }

    function failureMessage(message) {
      Swal.fire({
        text: message,
        position: 'top',
        timer: 2000,
        background: 'red',
        color: 'white',
        showConfirmButton: false
      });
    }
  </script>
</body>
</html>
