<%- include('../layouts/adminHeaders.ejs') %>

<link href="https://unpkg.com/cropperjs/dist/cropper.css" rel="stylesheet"/>
<script src="https://unpkg.com/cropperjs"></script>


<style>
  /* Reset some default styles */
  body, h1, h2, p, ul, form {
    margin: 0;
    padding: 0;
  }

  body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #add_user {
    max-width: 500px;
    height: 95%;
    margin: 50px auto;
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }

  .container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
  }

  .form-group {
    margin-bottom: 15px;
  }

  label {
    display: block;
    margin-bottom: 5px;
    color: #333;
  }

  input[type="text"], input[type="number"], input[type="date"], select, textarea {
    width: 100%;
    padding: 8px;
    box-sizing: border-box;
    border: 1px solid #010101;
    border-radius: 4px;
  }

  .btn {
    background-color: rgb(85, 145, 213);
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  .btn:hover {
    background-color: #c66;
  }

  nav {
    background-color: #333;
    padding: 10px 0;
    text-align: center;
  }

  nav a {
    color: white;
    text-decoration: none;
    margin: 0 10px;
  }

  nav a:hover {
    text-decoration: underline;
  }

  .error-message {
    color: red;
    font-size: 14px;
    margin-top: 5px;
  }


  .modal-content {
        margin: 10% auto;
        padding: 20px;
        width: 80%;
        max-width: 600px;
        background-color: #363636;
    }

    .cropper-container {
        width: 100%;
        max-height: 400px;
        margin-bottom: 10px;
    }
</style>



<body>
  <div class="container-scroller">
    <!-- partial:../../partials/_navbar.html -->
    <%- include('../layouts/adminHeadersmid') %>
    <!-- partial -->
    <div class="main-panel">
      <div class="content-wrapper" style="background-image: url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRUZTqYvv38DZhhKiWQ4qEMiQpvB8S2zfRNp-DPYG8v-JrQqLl5_lcnD_-b8oozMh5D9Yw&usqp=CAU'); background-size: cover; background-position: center;">
        <h2 style="color: rgb(10, 109, 170); text-align: center;">Edit Product</h2>

        <div class="col-md-12 grid-margin stretch-card">
          <form action="/admin/edit-product/<%= product._id %>" method="POST" id="edit_product" enctype="multipart/form-data" onsubmit="return productValidation()">
            <div class="new_user">
              <h2></h2><br>
              <div class="form-group">
                Product Name<label for="productName" class="text-light"></label>
                <input type="hidden" name="id" value="<%= product._id %>">
                <input type="text" name="productName" id="productName" value="<%= product.productName %>" placeholder="Product Name">
                <span id="productNameError" class="error-message"></span>
              </div>
              <div class="form-group col-md-4">
                <label for="inputState">Category</label>
                <select id="inputState" name="category" class="form-control">
                  <% categories.forEach(category => { %>
                    <% if (!category.blocked) { %>
                      <option value="<%= category._id %>" <%= product.category.equals(category._id) ? 'selected' : '' %>><%= category.categoryName %></option>
                    <% } %>
                  <% }); %>
                </select>
                <span id="categoryError" class="error-message"></span>
              </div>
              <div class="form-group">
                Size<label for="size" class="text-light"></label>
                <input type="text" name="size" id="size" value="<%= product.size %>" placeholder="Size">
                <span id="sizeError" class="error-message"></span>
              </div>
              <div class="form-group">
                Price<label for="price" class="text-light">Price</label>
                <input type="text" name="oldPrice" id="price" value="<%= product.oldPrice %>" placeholder="Price">
                <span id="priceError" class="error-message"></span>
              </div>
              <div class="form-group">
                Stock<label for="stock" class="text-light">Stock</label>
                <input type="text" name="stock" id="stock" value="<%= product.stock %>" placeholder="Stock">
                <span id="stockError" class="error-message"></span>
              </div>
            </div>

            <div class="form-group">
              <label for="offerType" class="text-light">Offer Type</label>
              <select name="offerType" id="offerType">
                <option value="" selected>Select offer type</option>
                <option value="">Percentage</option>
                <!-- Add other offer types as needed -->
              </select>
              <!-- <span id="offerTypeError" class="error-message"></span> -->
            </div>

            <div class="form-group">
              <label for="offerAmount" class="text-light">Offer Amount (%)</label>
              <input type="number" name="offerAmount" id="offerAmount" value="<%= product.offer.amount %>">
              <span id="offerAmountError" class="error-message"></span>
            </div>

            <div class="form-group">
              <label for="offerEndDate" class="text-light">Offer End Date</label>
              <input type="date" name="offerEndDate" value="<%= product.offer && product.offer.endDate ? product.offer.endDate.toISOString().split('T')[0] : '' %>" id="offerEndDate">
              <span id="offerEndDateError" class="error-message"></span>
            </div>

            <div class="form-group">
              Description <br>
              <textarea name="description" id="description" cols="50" rows="10"><%= product.description %></textarea>
              <span id="descriptionError" class="error-message"></span><br>
            </div>
            <br>
            <hr>
            <br>
            <label class="sign-form-label" for="form3Example4cd">Product Images</label><br>

            <img  class="image-preview" />
            <input type="file" name="images"  id="images" accept="image/*" onchange="previewImage(event)">
            <span id="imageError" class="error-message"></span>
            <!-- <div id="productError" class="px-2 my-2 text-center text-danger"></div> -->
            <br>
            <button type="submit" class="btn text-dark update">Upload Images</button>

            <hr>
            <br>

            <!-- Display existing images and allow editing -->
            <div class="d-flex flex-row align-items-center mb-3">
              <% for (let i = 0; i < product.images.length; i++) { %>
                <div class="form-outline flex-fill mb-0"><br>
                  <label class="sign-form-label" for="form3Example4cd">Image <%= i + 1 %></label>
                  <img src="/images/<%= product.images[i] %>" alt="Existing Image <%= i + 1 %>" style="max-width: 100px; max-height: 100px; margin-top: 10px; cursor: pointer;" onclick="document.getElementById('productImage<%= i + 1 %>').click();"><br><br>
                  <a href="/admin/remove-image/<%= product._id %>/<%= product.images[i] %>"><br><br>
                    <button type="button" class="btn text-dark update">Remove</button>
                  </a>
                  <br>
                  <input type="file" name="images" id="productImage<%= i + 1 %>" onchange="displayImagePreview(this)" style="display: none;">
                  <!-- Preview for the selected image -->
                  <img id="imagePreview<%= i + 1 %>" alt="" style="max-width: 100px; max-height: 100px; margin-top: 10px; display: none;">
                </div>
              <% } %>
            </div>

            <div id="productError" class="px-2 my-2 text-center text-danger"></div>
            <div class="mb-3 mt-4 mb-lg-4 d-grid gap-2">
              <div class="form-group">
                <button type="submit" style="background-color: black; color: white; padding: 8px 16px; border-radius: 5px; border: 2px solid #000; font-size: 20px;">
                  Submit
              </button>
              
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>



    <!-- Modal for cropping -->
    <div id="cropperModal" class="modal">
      <div class="modal-content">
          <div class="cropper-container">
              <img id="cropperImage" src="" alt="Image for cropping" />
          </div>
          <button onclick="cropImage()">Crop</button>
          <button onclick="closeModal()">Cancel</button>
      </div>
  </div>
              <script>
                // function displayImagePreview(input) {
                //   const imagePreview = document.getElementById('imagePreview' + input.id.charAt(input.id.length - 1));

                //   if (input.files && input.files[0]) {
                //     const reader = new FileReader();

                //     reader.onload = function (e) {
                //       imagePreview.src = e.target.result;
                //       imagePreview.style.display = "block"; // Show the image preview
                //     };

                //     reader.readAsDataURL(input.files[0]);
                //   } else {
                //     imagePreview.src = "";
                //     imagePreview.style.display = "none"; // Hide the image preview
                //   }
                // }
              </script>
              <script>
                function validateImageUpload() {
                  const imageInput = document.getElementById('images');
                  const file = imageInput.files[0];

                  // Check if a file is selected
                  if (!file) {
                    document.getElementById('imageError').innerText = "Please select an image.";
                    return false;
                  }

                  // Check file extension (allowed extensions: jpg, jpeg, png, gif, bmp)
                  const allowedExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'];
                  const fileExtension = file.name.split('.').pop().toLowerCase();
                  if (!allowedExtensions.includes(fileExtension)) {
                    document.getElementById('imageError').innerText = "Allowed image formats: JPG, JPEG, PNG, GIF,WEBP, BMP.";
                    return false;
                  }

                  // Check file size (e.g., limit to 2MB)
                  const maxSizeInBytes = 10 * 1024 * 1024; // 2MB
                  if (file.size > maxSizeInBytes) {
                    document.getElementById('imageError').innerText = "Image size exceeds the allowed limit (2MB).";
                    return false;
                  }

                  // Clear any previous error message
                  document.getElementById('imageError').innerText = "";
                  return true;
                }
              </script>

<script>

  let cropper;
      let currentInput;
      let croppedFiles = new Map(); // To store the cropped files
  
      function previewImage(event) {
          const input = event.target;
          const file = input.files[0];
          currentInput = input; // Save the reference to the current input
          if (file) {
              const reader = new FileReader();
              reader.onload = function(e) {
                  const cropperImage = document.getElementById('cropperImage');
                  cropperImage.src = e.target.result;
                  document.getElementById('cropperModal').style.display = 'block';
                  if (cropper) {
                      cropper.destroy();
                  }
                  cropper = new Cropper(cropperImage, {
                      aspectRatio: 3 / 4, // Portrait aspect ratio
                      viewMode: 1,
                  });
              };
              reader.readAsDataURL(file);
          }
      }
  
      function cropImage() {
          if (cropper) {
              cropper.getCroppedCanvas({
                  width: 300, // desired width
                  height: 400, // desired height
              }).toBlob(function(blob) {
                  const croppedImageSrc = URL.createObjectURL(blob);
                  const imagePreview = currentInput.previousElementSibling;
                  if (imagePreview && imagePreview.tagName === 'IMG') {
                      imagePreview.src = croppedImageSrc;
                  }
                  // Replace the file input with the cropped image blob
                  const dataTransfer = new DataTransfer();
                  const file = new File([blob], `croppedImage${Date.now()}.jpg`, { type: "image/jpeg" });
                  dataTransfer.items.add(file);
                  currentInput.files = dataTransfer.files;
                  // Store the cropped file in the Map
                  croppedFiles.set(currentInput.name, file);
                  closeModal();
              }, 'image/jpeg');
          }
      }
  
      function closeModal() {
          document.getElementById('cropperModal').style.display = 'none';
          if (cropper) {
              cropper.destroy();
              cropper = null;
          }
      }
  
  </script>
  
<script>
  function productValidation() {
    var isValid = true;

    // Reset errors
    clearValidationErrors();

    // Validate Product Name
    var productName = document.getElementById('productName').value.trim();
    if (productName === "") {
      document.getElementById('productNameError').innerText = 'Product Name is required';
      isValid = false;
    }else if (!/^[A-Za-z]+$/.test(productName.trim())) {
            document.getElementById('productNameError').innerText = 'Product name should only contain letters';
            isValid = false;
            } else {
         // Clear any previous error messages if valid
            document.getElementById('productNameError').innerText = '';
            }

    // Validate Category
    var category = document.getElementById('inputState').value;
    if (category === "") {
      document.getElementById('categoryError').innerText = 'Category is required';
      isValid = false;
    }

    // Validate Size
    var size = document.getElementById('size').value.trim();
    if (size === "") {
      document.getElementById('sizeError').innerText = 'Size is required';
      isValid = false;
    }

    // Validate Price
    var price = document.getElementById('price').value.trim();
    if (price === "") {
      document.getElementById('priceError').innerText = 'Price is required';
      isValid = false;
    } else if (isNaN(price)) {
      document.getElementById('priceError').innerText = 'Only numbers are allowed';
      isValid = false;
    } else if (price <= 0) {
      document.getElementById('priceError').innerText = 'Price should be positive';
      isValid = false;
    }

    // Validate Stock
    var stock = document.getElementById('stock').value.trim();
    if (stock === "") {
      document.getElementById('stockError').innerText = 'Stock is required';
      isValid = false;
    } else if (isNaN(stock)) {
      document.getElementById('stockError').innerText = 'Only numbers are allowed';
      isValid = false;
    } else if (stock <= 0) {
      document.getElementById('stockError').innerText = 'Stock should be positive';
      isValid = false;
    }

    // Validate Offer Type
    var offerType = document.getElementById('offerType').value;
    if (offerType === "") {
      document.getElementById('offerTypeError').innerText = 'Please select offer type';
      isValid = false;
    }

    // Validate Offer Amount
    var offerAmount = document.getElementById('offerAmount').value.trim();
    if (offerAmount === "") {
      document.getElementById('offerAmountError').innerText = 'Offer Amount is required';
      isValid = false;
    } else if (isNaN(offerAmount)) {
      document.getElementById('offerAmountError').innerText = 'Only numbers are allowed';
      isValid = false;
    } else if (offerAmount <= 0) {
      document.getElementById('offerAmountError').innerText = 'Offer Amount should be positive';
      isValid = false;
    } else if (offerAmount < 1 || offerAmount > 99) {
      document.getElementById('offerAmountError').innerText = 'Offer Amount should be between 1 and 99';
      isValid = false;
    }

    // Validate Offer End Date
    var offerEndDate = document.getElementById('offerEndDate').value.trim();
    if (offerEndDate === "") {
      document.getElementById('offerEndDateError').innerText = 'Offer End Date is required';
      isValid = false;
    } else {
      var today = new Date();
      var selectedDate = new Date(offerEndDate);

      // Compare dates
      if (selectedDate < today) {
        document.getElementById('offerEndDateError').innerText = 'Offer End Date should be today or later';
        isValid = false;
      }
    }

    // Validate Description
    var description = document.getElementById('description').value.trim();
    if (description === "") {
      document.getElementById('descriptionError').innerText = 'Description is required';
      isValid = false;
    }

    // Validate Images (at least three images are required)
    // var images = document.getElementById('images').files;
    // if (images.length  3) {
    //   document.getElementById('imageError').innerText = 'Please upload at least three images';
    //   isValid = false;
    // }

    // Display or clear general product error
    var productError = document.getElementById('productError');
    if (!isValid) {
      productError.innerText = "Please correct the errors above.";
      return false; // Prevent form submission
    } else {
      productError.innerText = "";
      return true; // Allow form submission
    }
  }

  function clearValidationErrors() {
    var errorMessages = document.querySelectorAll('.error-message');
    errorMessages.forEach(function (element) {
      element.innerText = "";
    });
  }
</script>           
            </div>


          </div>
          <!-- content-wrapper ends -->
          <!-- partial:../../partials/_footer.html -->

          <%- include('../layouts/adminFooters.ejs') %>